1.算法评价维度
        a.找到问题解法。算法需要在规定的输入范围内，可靠地求得问题的正确解。
        b.寻求最优解法。同一个问题可能存在多种解法，我们希望找到尽可能高效的算法。
        c.算法的可读性。算法的可读性是指用来表述算法的语言是否简洁易懂，以及算法实现的代码是否易于阅读和理解。
        d.算法的健壮性。算法的健壮性是指算法对于非法输入数据能够做出适当的处理，而不是产生异常或莫名其妙的结果。
        e.算法的时间复杂度。算法的时间复杂度是指算法需要消耗的时间资源,它是问题规模n的函数,记作T(n) = O(f(n))。
        f.算法的空间复杂度。算法的空间复杂度是指算法需要消耗的内存空间,它也是问题规模n的函数,记作S(n) = O(f(n))。
    算法效率的主要评价维度包括
        a.时间复杂度，即算法运行速度的快慢
        b.空间复杂度，即算法需要占用多少内存空间
    简而言之，我们的目标是找到时间复杂度尽可能低、空间复杂度尽可能低的算法，即设计“既快由省”的数据结构和算法。
2.效率评估方法
        a.实际测试。在真实的计算机上运行程序，通过统计算法执行的时间和占用的内存空间来评估算法的效率。
            难以排除测试环境的干扰，测试结果非常依赖测试环境和数据规模。
            开展完整的测试非常耗费资源，不适合频繁的测试。
        b.理论估算
            通过计算来估算算法的时间复杂度和空间复杂度。又被称为“复杂度分析”或“渐进复杂度分析”。
            复杂度分析评估的是算法运行效率随着输入数据量增多时的增长趋势。
                可以分为三个重点:
                    a.算法运行效率
                        运行时间
                        占用空间
                    b.随着输入数据量增多
                        复杂度与输入数据量有关，反应了算法的运行效率与输入数据量之间的关系。
                    c.增长趋势
                        复杂度分析关注的是算法时间与空间的增长趋势，而非具体的运行时间或占用空间。                                        